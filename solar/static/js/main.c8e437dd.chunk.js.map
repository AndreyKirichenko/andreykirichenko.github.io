{"version":3,"sources":["HertzsprungRussellDiagram.js","MainContent.js","MassSelection.js","TimeSlider.js","App.js","index.js"],"names":["TYPES","HertzsprungRussellDiagram","starState","lum","mass","radius","rgb","temp","time","type","info","data","labels","datasets","backgroundColor","borderColor","borderWidth","x","y","r","fill","label","join","alt","src","style","bottom","height","left","right","position","top","width","options","animation","duration","maintainAspectRatio","responsive","scales","beginAtZero","grid","color","max","min","reverse","plugins","tooltip","enabled","STYLE","alignItems","display","justifyContent","marginTop","MainContent","children","OPTIONS","MassSelection","fetchMass","placeholder","map","value","onChange","TimeSlider","setIndex","dataIndex","step","App","useState","isLoading","setIsLoading","setData","setDataIndex","event","a","axios","target","then","response","activePanel","popout","id","filled","vertical","length","flexDirection","opacity","ReactDOM","render","StrictMode","scheme","document","getElementById"],"mappings":"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","file":"static/js/main.c8e437dd.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Div,\n} from '@vkontakte/vkui';\nimport { Bubble } from 'react-chartjs-2';\n\nconst TYPES = [\n  'Звезда главной последовательности',\n  'Звезда главной последовательности',\n  'Звезда главной последовательности',\n  'Ветвь гигантов',\n  'Ветвь гигантов',\n  'Ветвь гигантов',\n  'Ветвь гигантов',\n  'Звезда главной последовательности',\n  'Звезда Вольфа-Райе',\n  'Ветвь гигантов',\n  'Белый Карлик',\n  'Белый Карлик',\n  'Белый Карлик',\n  'Нейтронная звезда',\n  'Черная дыра',\n  'Сверхновая',\n];\n\nconst HertzsprungRussellDiagram = ({ starState = {} }) => {\n  const {\n    lum,\n    mass,\n    radius,\n    rgb,\n    temp,\n    time,\n    type,\n  } = starState;\n\n  const info = [\n    TYPES[type],\n    `яркость: ${lum} от солнечной`,\n    `масса: ${mass} от солнечной`,\n    `радиус: ${radius} от солнечного`,\n    `температура: ${temp}K`,\n    `возраст: ${time} млн. лет`\n  ];\n\n  const data = {\n    labels: ['1'],\n    datasets: [\n      { \n        backgroundColor: rgb,\n        borderColor: rgb,\n        borderWidth: 4,\n        data: [{\n          x: temp,\n          y: lum,\n          r: 10,\n        }],\n        fill: false,\n        label: ` - ${info.join(' | ')}`,\n      },\n    ],\n  };\n  \n  const options = {\n    animation: {\n      duration: 0\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      x: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgb(255, 255, 255, 0.1)',\n          borderColor: 'rgb(255, 255, 255, 0.1)',\n        },\n        max: 600000,\n        min: 1,\n        position: 'bottom',\n        reverse: true,\n        type: 'logarithmic',\n      },\n      y: {\n        grid: {\n          color: 'rgb(255, 255, 255, 0.1)',\n          borderColor: 'rgb(255, 255, 255, 0.1)',\n        },\n        max: 1000000,\n        min: 0.00001,\n        position: 'left',\n        type: 'logarithmic',\n      },\n    },\n    plugins: {\n      tooltip: {\n        enabled: false,\n      }\n    }\n  };\n\n  return (\n      <>\n        <img\n          alt='Основная последовательность'\n          src='/solar/main.svg'\n          style={{\n            bottom: 0,\n            height: '100%',\n            left: 0,\n            right: 0,\n            position: 'absolute',\n            top: 0,\n            width: '100%',\n          }}\n        />\n        <Bubble\n          data={data}\n          options={options}\n        />\n      </>\n  );\n}\n\nexport default HertzsprungRussellDiagram;\n","import React from 'react';\n\nimport {\n  Div,\n} from '@vkontakte/vkui';\n\nconst STYLE = {\n  alignItems: 'center',\n  display: 'flex',\n  height: 'calc(100vh - 120px)',\n  justifyContent: 'center',\n  marginTop: 60,\n  position: 'relative',\n};\n\nconst MainContent = ({ children }) => <Div style={STYLE}>{children}</Div>;\n\nexport default MainContent;\n","import React from 'react';\n\nimport {\n  Div,\n  Select,\n} from '@vkontakte/vkui';\n\n\nconst OPTIONS = [\n  '0.2',\n  '0.65',\n  '1',\n  '2',\n  '4',\n  '6',\n  '10',\n  '20',\n  '30',\n  '40',\n]\n\nconst MassSelection = ({ fetchMass }) => (\n  <Div>\n    <Select\n      placeholder=\"Масса звезды\" \n      options={OPTIONS.map(mass => ({ label: `${mass * 100}% от массы Солнца`, value: mass }))}\n      onChange={fetchMass}\n    />\n  </Div>\n);\n\nexport default MassSelection;\n","import React from 'react';\nimport {\n  Div,\n  Slider,\n} from '@vkontakte/vkui';\n\nconst TimeSlider = ({ max, setIndex, dataIndex }) => (\n  <Div>\n    <Slider\n      step={1}\n      min={0}\n      max={max}\n      onChange={setIndex}\n      value={dataIndex}\n    />\n  </Div>\n);\n\nexport default TimeSlider; ","import React, { useState } from 'react';\n\nimport axios from 'axios';\n\nimport {\n  AppRoot,\n  Div,\n  FixedLayout,\n  Panel,\n  ScreenSpinner,\n  View,\n} from '@vkontakte/vkui';\n\nimport HertzsprungRussellDiagram  from './HertzsprungRussellDiagram';\nimport MainContent from './MainContent';\nimport MassSelection from './MassSelection';\nimport TimeSlider from './TimeSlider';\nimport { Icon56FavoriteOutline } from '@vkontakte/icons';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [dataIndex, setDataIndex] = useState(0);\n\n  const fetchMass = async (event) => {\n    setIsLoading(true);\n\n    await axios(`/solar/data/star_${event.target.value}_solar_mass.json`)\n      .then(response => {\n        const { data } = response.data;\n        setData(data)\n        setIsLoading(false);\n        setDataIndex(0);\n      });\n  }\n\n  return (\n    <AppRoot>\n      <View\n        activePanel=\"main\"\n        popout={isLoading && <ScreenSpinner />}\n      >\n        <Panel id=\"main\">\n          <FixedLayout filled vertical=\"top\">\n            <MassSelection fetchMass={fetchMass}/>\n          </FixedLayout>\n\n          { !data.length &&\n            <MainContent>\n              <Div style={{\n                alignItems: 'center',\n                display: 'flex',\n                flexDirection: 'column',\n                opacity: 0.5,\n              }}>\n                <Icon56FavoriteOutline />\n                Выберите массу звезды\n              </Div>\n            </MainContent>\n          }\n\n          { !!data.length &&\n            <>\n              <MainContent>\n                <HertzsprungRussellDiagram starState={data[dataIndex]} />\n              </MainContent>\n\n              <FixedLayout filled vertical=\"bottom\"> \n                <TimeSlider\n                  dataIndex={dataIndex}\n                  max={data.length - 1}\n                  setIndex={setDataIndex}\n                />\n              </FixedLayout>\n            </>\n          }\n        </Panel>\n      </View>\n    </AppRoot>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  AdaptivityProvider,\n  ConfigProvider,\n} from '@vkontakte/vkui';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ConfigProvider scheme=\"space_gray\">\n      <AdaptivityProvider>\n        <App />\n      </AdaptivityProvider>\n    </ConfigProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}